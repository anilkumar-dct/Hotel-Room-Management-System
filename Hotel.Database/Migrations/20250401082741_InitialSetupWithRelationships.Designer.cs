// <auto-generated />
using HotelRoomManagementSystem;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Hotel.Database.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250401082741_InitialSetupWithRelationships")]
    partial class InitialSetupWithRelationships
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Hotel.Models.Models.Rooms", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("RoomNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("Rooms");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            RoomNumber = "101",
                            Status = 1
                        },
                        new
                        {
                            ID = 2,
                            RoomNumber = "102",
                            Status = 0
                        },
                        new
                        {
                            ID = 3,
                            RoomNumber = "103",
                            Status = 2
                        },
                        new
                        {
                            ID = 4,
                            RoomNumber = "104",
                            Status = 0
                        },
                        new
                        {
                            ID = 5,
                            RoomNumber = "105",
                            Status = 1
                        },
                        new
                        {
                            ID = 6,
                            RoomNumber = "106",
                            Status = 1
                        },
                        new
                        {
                            ID = 7,
                            RoomNumber = "107",
                            Status = 1
                        },
                        new
                        {
                            ID = 8,
                            RoomNumber = "108",
                            Status = 1
                        },
                        new
                        {
                            ID = 9,
                            RoomNumber = "109",
                            Status = 1
                        },
                        new
                        {
                            ID = 10,
                            RoomNumber = "110",
                            Status = 1
                        },
                        new
                        {
                            ID = 11,
                            RoomNumber = "111",
                            Status = 1
                        },
                        new
                        {
                            ID = 12,
                            RoomNumber = "112",
                            Status = 1
                        });
                });

            modelBuilder.Entity("Hotel.Models.Models.Workers", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("Availability")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoomId")
                        .HasColumnType("int");

                    b.Property<string>("RoomNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("RoomId");

                    b.ToTable("Workers");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Availability = 0,
                            Name = "Jone",
                            RoomId = 1,
                            RoomNumber = "101"
                        },
                        new
                        {
                            ID = 2,
                            Availability = 2,
                            Name = "Sarah Jonshon",
                            RoomId = 2,
                            RoomNumber = "102"
                        },
                        new
                        {
                            ID = 3,
                            Availability = 1,
                            Name = "Emily",
                            RoomId = 3,
                            RoomNumber = "103"
                        });
                });

            modelBuilder.Entity("Hotel.Models.Models.Workers", b =>
                {
                    b.HasOne("Hotel.Models.Models.Rooms", "Rooms")
                        .WithMany("Workers")
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Rooms");
                });

            modelBuilder.Entity("Hotel.Models.Models.Rooms", b =>
                {
                    b.Navigation("Workers");
                });
#pragma warning restore 612, 618
        }
    }
}
