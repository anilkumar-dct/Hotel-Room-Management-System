@using Hotel.Models.Models
@model Hotel.Models.Models.Rooms

@{
    ViewData["Title"] = "Room Details";
}

<div class="container mt-4">
    <div class="card p-4 shadow-sm">
        <!-- Header Section -->
        <div class="d-flex justify-content-between align-items-center">
            <h3 class="fw-bold">Room Details</h3>
            <div>
                <a asp-action="Edit" asp-controller="Rooms" asp-route-id="@Model.ID" class="btn btn-outline-primary">
                    <i class="bi bi-pencil-square"></i> Edit
                </a>
                <a asp-action="Rooms" asp-route-id="@Model.ID" class="btn btn-outline-danger">
                    <i class="bi bi-arrow-left"></i>  Back
                </a>
            </div>
        </div>

        <!-- Room ID & Number -->
        <p class="mt-3"><strong>Room ID:</strong> @Model.ID</p>
        <p><strong>Room Number:</strong> <span class="fw-bold">@Model.RoomNumber</span></p>

        <!-- Status Section -->
        <div class="alert @GetStatusClass(Model.Status)">
            <i class="bi bi-check-circle"></i>
            <strong>@Model.Status</strong>
            <p class="mb-0">@GetStatusMessage(Model.Status)</p>
        </div>

        <div class="card p-3 mb-3">
            <h5 class="fw-bold">Assigned Workers</h5>

            @if (Model.Workers != null && Model.Workers.Any())
            {
                <table class="table table-striped">
                    <thead>
                        <tr>
                            <th>Worker ID</th>
                            <th>Name</th>
                            
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var worker in Model.Workers)
                        {
                            <tr>
                                <td>@worker.ID</td>
                                <td>@worker.Name</td>
                            </tr>
                        }
                    </tbody>
                </table>
            }
            else
            {
                <p class="text-muted">No workers assigned to this room.</p>
            }
        </div>

       
    </div>
</div>

@functions {
    private string GetStatusClass(RoomStatus status)
    {
        return status switch
        {
            RoomStatus.Available => "alert-success",
            RoomStatus.Occupied => "alert-danger",
            RoomStatus.UnderMaintenance => "alert-warning",
            _ => "alert-secondary"
        };
    }

    private string GetStatusMessage(RoomStatus status)
    {
        return status switch
        {
            RoomStatus.Available => "This room is currently available for assignment.",
            RoomStatus.Occupied => "This room is currently occupied.",
            RoomStatus.UnderMaintenance => "This room is under maintenance.",
            _ => "Status unknown."
        };
    }
}
